{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Menlo-Regular;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red255\green255\blue255;\red0\green0\blue0;
\red10\green77\blue204;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;\red244\green246\blue249;
\red0\green0\blue255;\red244\green246\blue249;\red21\green23\blue26;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18039;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c1176\c40000\c83922;\cssrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;\cssrgb\c96471\c97255\c98039;
\cssrgb\c0\c0\c100000;\cssrgb\c96471\c97255\c98039;\cssrgb\c10588\c12157\c13725\c4706;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid202\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\paperw11900\paperh16840\margl1440\margr1440\vieww20040\viewh19120\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
Requirements
\fs40 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl0
\b0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Write well structured, documented, maintainable code.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Write unit tests to test the different components\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb1 \
\pard\pardeftab720\sl340\partightenfactor0

\f1 \cf4 \outl0\strokewidth0 \strokec4 Disclosing of this exercises outside of this interview process is strictly forbidden.
\f0\fs32 \cf2 \outl0\strokewidth0 \

\b\fs48 \cf5 \
\pard\pardeftab720\partightenfactor0

\fs64 \cf2 \cb3 1. General Programming
\fs36 \
\pard\pardeftab720\partightenfactor0

\fs48 \cf2 \cb1 \
\pard\pardeftab720\sl340\partightenfactor0

\f1\b0\fs29\fsmilli14667 \cf4 \outl0\strokewidth0 \strokec4 Given a tree structure 
\b (not necessarily binary (!) )
\b0  with three types nodes:\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls2\ilvl0
\b \cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 The root
\b0 : only node of the tree with no parent\
\ls2\ilvl0
\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ventures:
\b0  all children of the root\
\ls2\ilvl0
\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 accounts:
\b0  all nodes which are not the root neither venture nodes\
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \
\pard\pardeftab720\sl340\partightenfactor0

\fs29\fsmilli14667 \cf6 \outl0\strokewidth0 which is represented as a list of 
\b Link
\b0  objects:
\f2\fs28 \cf7 \cb7 \
\
\pard\pardeftab720\sl400\partightenfactor0

\fs29\fsmilli14667 \cf8 \cb9 class Link(object):
\fs24 \

\fs29\fsmilli14667  \'a0\'a0\'a0def __init__(self, parent_name, child_name):
\fs24 \

\fs29\fsmilli14667  \'a0\'a0\'a0	self.parent_name = parent_name
\fs24 \

\fs29\fsmilli14667  \'a0\'a0\'a0	self.child_name = child_name
\f1\fs29\fsmilli14667 \cf4 \cb1 \outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \
For example:
\f3 \cf8 \strokec10  \'a0\'a0\
\'a0\
\cb11 			Root 
\fs24 \strokec4 \
\pard\pardeftab720\li1920\sl400\partightenfactor0

\fs29\fsmilli14667 \cf8 \strokec10  \'a0\'a0/ \'a0\'a0\'a0\'a0\'a0\'a0\\ 
\fs24 \strokec4 \
\pard\pardeftab720\sl400\partightenfactor0

\fs29\fsmilli14667 \cf8 \strokec10 	 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0/ \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0  \\
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10  \'a0\'a0\'a0\'a0\'a0\'a0\'a0
\fs29\fsmilli14667 \outl0\strokewidth0 HelloFresh UK
\fs29\fsmilli14667 \outl0\strokewidth0 \strokec10  \'a0\'a0\'a0\'a0\'a0HelloFresh US \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10  \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0/ \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\\ \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\\
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10  account1 \'a0\'a0\'a0\'a0account2 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0account3
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10 				 \'a0\'a0\'a0\'a0\'a0\'a0/ \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\\
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10 			 \'a0\'a0\'a0\'a0\'a0\'a0account4 \'a0\'a0\'a0\'a0account5
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10  \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0/
\fs24 \strokec4 \

\fs29\fsmilli14667 \strokec10 			     account6
\fs24 \cf4 \strokec4 \
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs29\fsmilli14667 \cf4 \cb1 \
where the top left link could be expressed as:\
\
\pard\pardeftab720\sl340\partightenfactor0

\f2\fs28 \cf8 \cb11 \strokec10 top_left_link = Link(\'93Root\'94,\'94\outl0\strokewidth0 Hellofresh UK\outl0\strokewidth0 \strokec10 \'94)\cf2 \cb9 \outl0\strokewidth0 \
\pard\pardeftab720\sl400\partightenfactor0

\f1\fs29\fsmilli14667 \cf10 \cb1 \outl0\strokewidth0 \strokec10 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf2 \cb3 \outl0\strokewidth0 Requirements
\b0 	 
\fs28 \
\pard\tx566\pardeftab720\partightenfactor0
\cf2 \cb3 \kerning1\expnd0\expndtw0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 {\listtext	1	}
\f1\fs29\fsmilli14667 \cf8 \cb7 \expnd0\expndtw0\kerning0
Write a function that given a list of links and an account names, finds the name of the venture it belongs to. \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf8 \cb11 \kerning1\expnd0\expndtw0          \expnd0\expndtw0\kerning0
example
\f2\fs28 \cf8 \
\pard\pardeftab720\sl400\partightenfactor0
\ls3\ilvl1\cf8 \kerning1\expnd0\expndtw0           \expnd0\expndtw0\kerning0
>> find_venture(list_of_links,\'94account5\'94)\
\ls3\ilvl1\kerning1\expnd0\expndtw0                \expnd0\expndtw0\kerning0
\'93Hellofresh US\'94
\f3\fs29\fsmilli14667 \cf8 \cb11 \
\pard\tx220\tx720\tx1133\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls3\ilvl0
\f0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Write well structured, documented, maintainable code.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Write unit tests to test the different components
\b\fs64 \cf5 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 ________________________________________________\cf5 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 2. Apache Spark\
\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\b0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Download the following dataset of {\field{\*\fldinst{HYPERLINK "https://s3-eu-west-1.amazonaws.com/dwh-test-resources/recipes.json"}}{\fldrslt \cf5 Open Recipes}}\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Write an Apache Spark application in 
\b Python
\b0  that reads the recipes json, extracts every recipe that has 
\b \'93Chilies\'94
\b0  as one of the ingredients. Please allow for mispelling of the word for example 
\b Chiles 
\b0 as well as the singular form of the word.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Add an extra field to each of the extracted recipes with the name 
\f2 \cb12 difficulty
\f0 \cb3 . The 
\f2 \cb12 difficulty
\f0 \cb3  field would have a value of "Hard" if the total of 
\f2 \cb12 prepTime
\f0 \cb3  and 
\f2 \cb12 cookTime
\f0 \cb3  is greater than 1 hour, "Medium" if the total is between 30 minutes and 1 hour, "Easy" if the total is less than 30 minutes, and "Unknown" otherwise.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
The resulting dataset should be saved as parquet file.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Your Spark application could run in Stand-alone mode or it could run on YARN.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Place your answer in a directory called "recipes-etl" in the root of this repository, with a README.md file that outlines the instructions to run your Spark Application.
\fs32 \cb1 \
\pard\pardeftab720\partightenfactor0

\b\fs40 \cf5 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Requirements\
\pard\pardeftab720\partightenfactor0
\cf2 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\b0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Use Apache Spark version 1.6.1\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Write well structured, documented, maintainable code.\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Write unit tests to test the different components\
\pard\tx566\pardeftab720\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Open Recipes archive courtesy of {\field{\*\fldinst{HYPERLINK "https://github.com/fictivekin/openrecipes"}}{\fldrslt \cf5 Ed Finkler}}
\fs32 \cf5 \
\pard\pardeftab720\partightenfactor0
\cf8 \
\
Good luck!\
\
\
}